[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..1ce22ce[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,230 @@[m
[32m+[m[32m## Ignore Visual Studio temporary files, build results, and[m
[32m+[m[32m## files generated by popular Visual Studio add-ons.[m
[32m+[m
[32m+[m[32m# User-specific files[m
[32m+[m[32m*.suo[m
[32m+[m[32m*.user[m
[32m+[m[32m*.userosscache[m
[32m+[m[32m*.sln.docstates[m
[32m+[m
[32m+[m[32m# User-specific files (MonoDevelop/Xamarin Studio)[m
[32m+[m[32m*.userprefs[m
[32m+[m
[32m+[m[32m# Build results[m
[32m+[m[32m[Dd]ebug/[m
[32m+[m[32m[Dd]ebugPublic/[m
[32m+[m[32m[Rr]elease/[m
[32m+[m[32m[Rr]eleases/[m
[32m+[m[32mx64/[m
[32m+[m[32mx86/[m
[32m+[m[32mbuild/[m
[32m+[m[32mbld/[m
[32m+[m[32m[Bb]in/[m
[32m+[m[32m[Oo]bj/[m
[32m+[m
[32m+[m[32m# Visual Studio 2015 cache/options directory[m
[32m+[m[32m.vs/[m
[32m+[m[32m# Uncomment if you have tasks that create the project's static files in wwwroot[m
[32m+[m[32m#wwwroot/[m
[32m+[m
[32m+[m[32m# MSTest test Results[m
[32m+[m[32m[Tt]est[Rr]esult*/[m
[32m+[m[32m[Bb]uild[Ll]og.*[m
[32m+[m
[32m+[m[32m# NUNIT[m
[32m+[m[32m*.VisualState.xml[m
[32m+[m[32mTestResult.xml[m
[32m+[m
[32m+[m[32m# Build Results of an ATL Project[m
[32m+[m[32m[Dd]ebugPS/[m
[32m+[m[32m[Rr]eleasePS/[m
[32m+[m[32mdlldata.c[m
[32m+[m
[32m+[m[32m# DNX[m
[32m+[m[32mproject.lock.json[m
[32m+[m[32martifacts/[m
[32m+[m
[32m+[m[32m*_i.c[m
[32m+[m[32m*_p.c[m
[32m+[m[32m*_i.h[m
[32m+[m[32m*.ilk[m
[32m+[m[32m*.meta[m
[32m+[m[32m*.obj[m
[32m+[m[32m*.pch[m
[32m+[m[32m*.pdb[m
[32m+[m[32m*.pgc[m
[32m+[m[32m*.pgd[m
[32m+[m[32m*.rsp[m
[32m+[m[32m*.sbr[m
[32m+[m[32m*.tlb[m
[32m+[m[32m*.tli[m
[32m+[m[32m*.tlh[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.tmp_proj[m
[32m+[m[32m*.log[m
[32m+[m[32m*.vspscc[m
[32m+[m[32m*.vssscc[m
[32m+[m[32m.builds[m
[32m+[m[32m*.pidb[m
[32m+[m[32m*.svclog[m
[32m+[m[32m*.scc[m
[32m+[m
[32m+[m[32m# Chutzpah Test files[m
[32m+[m[32m_Chutzpah*[m
[32m+[m
[32m+[m[32m# Visual C++ cache files[m
[32m+[m[32mipch/[m
[32m+[m[32m*.aps[m
[32m+[m[32m*.ncb[m
[32m+[m[32m*.opensdf[m
[32m+[m[32m*.sdf[m
[32m+[m[32m*.cachefile[m
[32m+[m
[32m+[m[32m# Visual Studio profiler[m
[32m+[m[32m*.psess[m
[32m+[m[32m*.vsp[m
[32m+[m[32m*.vspx[m
[32m+[m[32m*.sap[m
[32m+[m
[32m+[m[32m# TFS 2012 Local Workspace[m
[32m+[m[32m$tf/[m
[32m+[m
[32m+[m[32m# Guidance Automation Toolkit[m
[32m+[m[32m*.gpState[m
[32m+[m
[32m+[m[32m# ReSharper is a .NET coding add-in[m
[32m+[m[32m_ReSharper*/[m
[32m+[m[32m*.[Rr]e[Ss]harper[m
[32m+[m[32m*.DotSettings.user[m
[32m+[m
[32m+[m[32m# JustCode is a .NET coding add-in[m
[32m+[m[32m.JustCode[m
[32m+[m
[32m+[m[32m# TeamCity is a build add-in[m
[32m+[m[32m_TeamCity*[m
[32m+[m
[32m+[m[32m# DotCover is a Code Coverage Tool[m
[32m+[m[32m*.dotCover[m
[32m+[m
[32m+[m[32m# NCrunch[m
[32m+[m[32m_NCrunch_*[m
[32m+[m[32m.*crunch*.local.xml[m
[32m+[m[32mnCrunchTemp_*[m
[32m+[m
[32m+[m[32m# MightyMoose[m
[32m+[m[32m*.mm.*[m
[32m+[m[32mAutoTest.Net/[m
[32m+[m
[32m+[m[32m# Web workbench (sass)[m
[32m+[m[32m.sass-cache/[m
[32m+[m
[32m+[m[32m# Installshield output folder[m
[32m+[m[32m[Ee]xpress/[m
[32m+[m
[32m+[m[32m# DocProject is a documentation generator add-in[m
[32m+[m[32mDocProject/buildhelp/[m
[32m+[m[32mDocProject/Help/*.HxT[m
[32m+[m[32mDocProject/Help/*.HxC[m
[32m+[m[32mDocProject/Help/*.hhc[m
[32m+[m[32mDocProject/Help/*.hhk[m
[32m+[m[32mDocProject/Help/*.hhp[m
[32m+[m[32mDocProject/Help/Html2[m
[32m+[m[32mDocProject/Help/html[m
[32m+[m
[32m+[m[32m# Click-Once directory[m
[32m+[m[32mpublish/[m
[32m+[m
[32m+[m[32m# Publish Web Output[m
[32m+[m[32m*.[Pp]ublish.xml[m
[32m+[m[32m*.azurePubxml[m
[32m+[m[32m# TODO: Comment the next line if you want to checkin your web deploy settings[m[41m [m
[32m+[m[32m# but database connection strings (with potential passwords) will be unencrypted[m
[32m+[m[32m*.pubxml[m
[32m+[m[32m*.publishproj[m
[32m+[m
[32m+[m[32m# NuGet Packages[m
[32m+[m[32m*.nupkg[m
[32m+[m[32m# The packages folder can be ignored because of Package Restore[m
[32m+[m[32m**/packages/*[m
[32m+[m[32m# except build/, which is used as an MSBuild target.[m
[32m+[m[32m!**/packages/build/[m
[32m+[m[32m# Uncomment if necessary however generally it will be regenerated when needed[m
[32m+[m[32m#!**/packages/repositories.config[m
[32m+[m
[32m+[m[32m# Windows Azure Build Output[m
[32m+[m[32mcsx/[m
[32m+[m[32m*.build.csdef[m
[32m+[m
[32m+[m[32m# Windows Azure Emulator[m
[32m+[m[32mefc/[m
[32m+[m[32mrfc/[m
[32m+[m
[32m+[m[32m# Windows Store app package directory[m
[32m+[m[32mAppPackages/[m
[32m+[m
[32m+[m[32m# Visual Studio cache files[m
[32m+[m[32m# files ending in .cache can be ignored[m
[32m+[m[32m*.[Cc]ache[m
[32m+[m[32m# but keep track of directories ending in .cache[m
[32m+[m[32m!*.[Cc]ache/[m
[32m+[m
[32m+[m[32m# Others[m
[32m+[m[32mClientBin/[m
[32m+[m[32m[Ss]tyle[Cc]op.*[m
[32m+[m[32m~$*[m
[32m+[m[32m*~[m
[32m+[m[32m*.dbmdl[m
[32m+[m[32m*.dbproj.schemaview[m
[32m+[m[32m*.pfx[m
[32m+[m[32m*.publishsettings[m
[32m+[m[32mnode_modules/[m
[32m+[m[32morleans.codegen.cs[m
[32m+[m
[32m+[m[32m# RIA/Silverlight projects[m
[32m+[m[32mGenerated_Code/[m
[32m+[m
[32m+[m[32m# Backup & report files from converting an old project file[m
[32m+[m[32m# to a newer Visual Studio version. Backup files are not needed,[m
[32m+[m[32m# because we have git ;-)[m
[32m+[m[32m_UpgradeReport_Files/[m
[32m+[m[32mBackup*/[m
[32m+[m[32mUpgradeLog*.XML[m
[32m+[m[32mUpgradeLog*.htm[m
[32m+[m
[32m+[m[32m# SQL Server files[m
[32m+[m[32m*.mdf[m
[32m+[m[32m*.ldf[m
[32m+[m
[32m+[m[32m# Business Intelligence projects[m
[32m+[m[32m*.rdl.data[m
[32m+[m[32m*.bim.layout[m
[32m+[m[32m*.bim_*.settings[m
[32m+[m
[32m+[m[32m# Microsoft Fakes[m
[32m+[m[32mFakesAssemblies/[m
[32m+[m
[32m+[m[32m# GhostDoc plugin setting file[m
[32m+[m[32m*.GhostDoc.xml[m
[32m+[m
[32m+[m[32m# Node.js Tools for Visual Studio[m
[32m+[m[32m.ntvs_analysis.dat[m
[32m+[m
[32m+[m[32m# Visual Studio 6 build log[m
[32m+[m[32m*.plg[m
[32m+[m
[32m+[m[32m# Visual Studio 6 workspace options file[m
[32m+[m[32m*.opt[m
[32m+[m
[32m+[m[32m# Visual Studio LightSwitch build output[m
[32m+[m[32m**/*.HTMLClient/GeneratedArtifacts[m
[32m+[m[32m**/*.DesktopClient/GeneratedArtifacts[m
[32m+[m[32m**/*.DesktopClient/ModelManifest.xml[m
[32m+[m[32m**/*.Server/GeneratedArtifacts[m
[32m+[m[32m**/*.Server/ModelManifest.xml[m
[32m+[m[32m_Pvt_Extensions[m
[32m+[m
[32m+[m[32m# Paket dependency manager[m
[32m+[m[32m.paket/paket.exe[m
[32m+[m
[32m+[m[32m# FAKE - F# Make[m
[32m+[m[32m.fake/[m
\ No newline at end of file[m
[1mdiff --git a/MongoTest.sln b/MongoTest.sln[m
[1mnew file mode 100644[m
[1mindex 0000000..3f87675[m
[1m--- /dev/null[m
[1m+++ b/MongoTest.sln[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mï»¿[m
[32m+[m[32mMicrosoft Visual Studio Solution File, Format Version 12.00[m
[32m+[m[32m# Visual Studio 14[m
[32m+[m[32mVisualStudioVersion = 14.0.23107.0[m
[32m+[m[32mMinimumVisualStudioVersion = 10.0.40219.1[m
[32m+[m[32mProject("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "MongoTest", "MongoTest\MongoTest.csproj", "{78D220D2-1A0D-44A6-9F70-D4EA399B9B58}"[m
[32m+[m[32mEndProject[m
[32m+[m[32mGlobal[m
[32m+[m	[32mGlobalSection(SolutionConfigurationPlatforms) = preSolution[m
[32m+[m		[32mDebug|Any CPU = Debug|Any CPU[m
[32m+[m		[32mRelease|Any CPU = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(ProjectConfigurationPlatforms) = postSolution[m
[32m+[m		[32m{78D220D2-1A0D-44A6-9F70-D4EA399B9B58}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
[32m+[m		[32m{78D220D2-1A0D-44A6-9F70-D4EA399B9B58}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{78D220D2-1A0D-44A6-9F70-D4EA399B9B58}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
[32m+[m		[32m{78D220D2-1A0D-44A6-9F70-D4EA399B9B58}.Release|Any CPU.Build.0 = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(SolutionProperties) = preSolution[m
[32m+[m		[32mHideSolutionNode = FALSE[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m[32mEndGlobal[m
[1mdiff --git a/MongoTest/App_Start/BundleConfig.cs b/MongoTest/App_Start/BundleConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..a840dc8[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/BundleConfig.cs[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mï»¿using System.Web;[m
[32m+[m[32musing System.Web.Optimization;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    public class BundleConfig[m
[32m+[m[32m    {[m
[32m+[m[32m        // For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862[m
[32m+[m[32m        public static void RegisterBundles(BundleCollection bundles)[m
[32m+[m[32m        {[m
[32m+[m[32m            bundles.Add(new ScriptBundle("~/bundles/jquery").Include([m
[32m+[m[32m                        "~/Scripts/jquery-{version}.js"));[m
[32m+[m
[32m+[m[32m            // Use the development version of Modernizr to develop with and learn from. Then, when you're[m
[32m+[m[32m            // ready for production, use the build tool at http://modernizr.com to pick only the tests you need.[m
[32m+[m[32m            bundles.Add(new ScriptBundle("~/bundles/modernizr").Include([m
[32m+[m[32m                        "~/Scripts/modernizr-*"));[m
[32m+[m
[32m+[m[32m            bundles.Add(new ScriptBundle("~/bundles/bootstrap").Include([m
[32m+[m[32m                      "~/Scripts/bootstrap.js",[m
[32m+[m[32m                      "~/Scripts/respond.js"));[m
[32m+[m
[32m+[m[32m            bundles.Add(new StyleBundle("~/Content/css").Include([m
[32m+[m[32m                      "~/Content/bootstrap.css",[m
[32m+[m[32m                      "~/Content/site.css"));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/App_Start/FilterConfig.cs b/MongoTest/App_Start/FilterConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..db04aa1[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/FilterConfig.cs[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mï»¿using System.Web;[m
[32m+[m[32musing System.Web.Mvc;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    public class FilterConfig[m
[32m+[m[32m    {[m
[32m+[m[32m        public static void RegisterGlobalFilters(GlobalFilterCollection filters)[m
[32m+[m[32m        {[m
[32m+[m[32m            filters.Add(new HandleErrorAttribute());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/App_Start/IdentityConfig.cs b/MongoTest/App_Start/IdentityConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..5eb2dcc[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/IdentityConfig.cs[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mï»¿using System.Threading.Tasks;[m
[32m+[m[32musing Microsoft.AspNet.Identity;[m
[32m+[m[32musing Microsoft.AspNet.Identity.EntityFramework;[m
[32m+[m[32musing Microsoft.AspNet.Identity.Owin;[m
[32m+[m[32musing Microsoft.Owin;[m
[32m+[m[32musing MongoTest.Models;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    // Configure the application user manager used in this application. UserManager is defined in ASP.NET Identity and is used by the application.[m
[32m+[m
[32m+[m[32m    public class ApplicationUserManager : UserManager<ApplicationUser>[m
[32m+[m[32m    {[m
[32m+[m[32m        public ApplicationUserManager(IUserStore<ApplicationUser> store)[m
[32m+[m[32m            : base(store)[m
[32m+[m[32m        {[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public static ApplicationUserManager Create(IdentityFactoryOptions<ApplicationUserManager> options, IOwinContext context)[m
[32m+[m[32m        {[m
[32m+[m[32m            var manager = new ApplicationUserManager(new UserStore<ApplicationUser>(context.Get<ApplicationDbContext>()));[m
[32m+[m[32m            // Configure validation logic for usernames[m
[32m+[m[32m            manager.UserValidator = new UserValidator<ApplicationUser>(manager)[m
[32m+[m[32m            {[m
[32m+[m[32m                AllowOnlyAlphanumericUserNames = false,[m
[32m+[m[32m                RequireUniqueEmail = true[m
[32m+[m[32m            };[m
[32m+[m[32m            // Configure validation logic for passwords[m
[32m+[m[32m            manager.PasswordValidator = new PasswordValidator[m
[32m+[m[32m            {[m
[32m+[m[32m                RequiredLength = 6,[m
[32m+[m[32m                RequireNonLetterOrDigit = true,[m
[32m+[m[32m                RequireDigit = true,[m
[32m+[m[32m                RequireLowercase = true,[m
[32m+[m[32m                RequireUppercase = true,[m
[32m+[m[32m            };[m
[32m+[m[32m            var dataProtectionProvider = options.DataProtectionProvider;[m
[32m+[m[32m            if (dataProtectionProvider != null)[m
[32m+[m[32m            {[m
[32m+[m[32m                manager.UserTokenProvider = new DataProtectorTokenProvider<ApplicationUser>(dataProtectionProvider.Create("ASP.NET Identity"));[m
[32m+[m[32m            }[m
[32m+[m[32m            return manager;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/App_Start/RouteConfig.cs b/MongoTest/App_Start/RouteConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..e06fc80[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/RouteConfig.cs[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing System.Web;[m
[32m+[m[32musing System.Web.Mvc;[m
[32m+[m[32musing System.Web.Routing;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    public class RouteConfig[m
[32m+[m[32m    {[m
[32m+[m[32m        public static void RegisterRoutes(RouteCollection routes)[m
[32m+[m[32m        {[m
[32m+[m[32m            routes.IgnoreRoute("{resource}.axd/{*pathInfo}");[m
[32m+[m[41m            [m
[32m+[m[32m            routes.MapRoute([m
[32m+[m[32m                name: "Default",[m
[32m+[m[32m                url: "{controller}/{action}/{id}",[m
[32m+[m[32m                defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional }[m
[32m+[m[32m            );[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/App_Start/Startup.Auth.cs b/MongoTest/App_Start/Startup.Auth.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..5e885ef[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/Startup.Auth.cs[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing Microsoft.AspNet.Identity;[m
[32m+[m[32musing Microsoft.AspNet.Identity.EntityFramework;[m
[32m+[m[32musing Microsoft.Owin;[m
[32m+[m[32musing Microsoft.Owin.Security.Cookies;[m
[32m+[m[32musing Microsoft.Owin.Security.Google;[m
[32m+[m[32musing Microsoft.Owin.Security.OAuth;[m
[32m+[m[32musing Owin;[m
[32m+[m[32musing MongoTest.Providers;[m
[32m+[m[32musing MongoTest.Models;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    public partial class Startup[m
[32m+[m[32m    {[m
[32m+[m[32m        public static OAuthAuthorizationServerOptions OAuthOptions { get; private set; }[m
[32m+[m
[32m+[m[32m        public static string PublicClientId { get; private set; }[m
[32m+[m
[32m+[m[32m        // For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864[m
[32m+[m[32m        public void ConfigureAuth(IAppBuilder app)[m
[32m+[m[32m        {[m
[32m+[m[32m            // Configure the db context and user manager to use a single instance per request[m
[32m+[m[32m            app.CreatePerOwinContext(ApplicationDbContext.Create);[m
[32m+[m[32m            app.CreatePerOwinContext<ApplicationUserManager>(ApplicationUserManager.Create);[m
[32m+[m
[32m+[m[32m            // Enable the application to use a cookie to store information for the signed in user[m
[32m+[m[32m            // and to use a cookie to temporarily store information about a user logging in with a third party login provider[m
[32m+[m[32m            app.UseCookieAuthentication(new CookieAuthenticationOptions());[m
[32m+[m[32m            app.UseExternalSignInCookie(DefaultAuthenticationTypes.ExternalCookie);[m
[32m+[m
[32m+[m[32m            // Configure the application for OAuth based flow[m
[32m+[m[32m            PublicClientId = "self";[m
[32m+[m[32m            OAuthOptions = new OAuthAuthorizationServerOptions[m
[32m+[m[32m            {[m
[32m+[m[32m                TokenEndpointPath = new PathString("/Token"),[m
[32m+[m[32m                Provider = new ApplicationOAuthProvider(PublicClientId),[m
[32m+[m[32m                AuthorizeEndpointPath = new PathString("/api/Account/ExternalLogin"),[m
[32m+[m[32m                AccessTokenExpireTimeSpan = TimeSpan.FromDays(14),[m
[32m+[m[32m                // In production mode set AllowInsecureHttp = false[m
[32m+[m[32m                AllowInsecureHttp = true[m
[32m+[m[32m            };[m
[32m+[m
[32m+[m[32m            // Enable the application to use bearer tokens to authenticate users[m
[32m+[m[32m            app.UseOAuthBearerTokens(OAuthOptions);[m
[32m+[m
[32m+[m[32m            // Uncomment the following lines to enable logging in with third party login providers[m
[32m+[m[32m            //app.UseMicrosoftAccountAuthentication([m
[32m+[m[32m            //    clientId: "",[m
[32m+[m[32m            //    clientSecret: "");[m
[32m+[m
[32m+[m[32m            //app.UseTwitterAuthentication([m
[32m+[m[32m            //    consumerKey: "",[m
[32m+[m[32m            //    consumerSecret: "");[m
[32m+[m
[32m+[m[32m            //app.UseFacebookAuthentication([m
[32m+[m[32m            //    appId: "",[m
[32m+[m[32m            //    appSecret: "");[m
[32m+[m
[32m+[m[32m            //app.UseGoogleAuthentication(new GoogleOAuth2AuthenticationOptions()[m
[32m+[m[32m            //{[m
[32m+[m[32m            //    ClientId = "",[m
[32m+[m[32m            //    ClientSecret = ""[m
[32m+[m[32m            //});[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/App_Start/WebApiConfig.cs b/MongoTest/App_Start/WebApiConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..c41969f[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/App_Start/WebApiConfig.cs[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing System.Net.Http;[m
[32m+[m[32musing System.Web.Http;[m
[32m+[m[32musing Microsoft.Owin.Security.OAuth;[m
[32m+[m[32musing Newtonsoft.Json.Serialization;[m
[32m+[m
[32m+[m[32mnamespace MongoTest[m
[32m+[m[32m{[m
[32m+[m[32m    public static class WebApiConfig[m
[32m+[m[32m    {[m
[32m+[m[32m        public static void Register(HttpConfiguration config)[m
[32m+[m[32m        {[m
[32m+[m[32m            // Web API configuration and services[m
[32m+[m[32m            // Configure Web API to use only bearer token authentication.[m
[32m+[m[32m            config.SuppressDefaultHostAuthentication();[m
[32m+[m[32m            config.Filters.Add(new HostAuthenticationFilter(OAuthDefaults.AuthenticationType));[m
[32m+[m
[32m+[m[32m            // Web API routes[m
[32m+[m[32m            config.MapHttpAttributeRoutes();[m
[32m+[m
[32m+[m[32m            config.Routes.MapHttpRoute([m
[32m+[m[32m                name: "DefaultApi",[m
[32m+[m[32m                routeTemplate: "api/{controller}/{id}",[m
[32m+[m[32m                defaults: new { id = RouteParameter.Optional }[m
[32m+[m[32m            );[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MongoTest/Areas/HelpPage/ApiDescriptionExtensions.cs b/MongoTest/Areas/HelpPage/ApiDescriptionExtensions.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..1fdf3ed[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/Areas/HelpPage/ApiDescriptionExtensions.cs[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32musing System;[m
[32m+[m[32musing System.Text;[m
[32m+[m[32musing System.Web;[m
[32m+[m[32musing System.Web.Http.Description;[m
[32m+[m
[32m+[m[32mnamespace MongoTest.Areas.HelpPage[m
[32m+[m[32m{[m
[32m+[m[32m    public static class ApiDescriptionExtensions[m
[32m+[m[32m    {[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// Generates an URI-friendly ID for the <see cref="ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        /// <param name="description">The <see cref="ApiDescription"/>.</param>[m
[32m+[m[32m        /// <returns>The ID as a string.</returns>[m
[32m+[m[32m        public static string GetFriendlyId(this ApiDescription description)[m
[32m+[m[32m        {[m
[32m+[m[32m            string path = description.RelativePath;[m
[32m+[m[32m            string[] urlParts = path.Split('?');[m
[32m+[m[32m            string localPath = urlParts[0];[m
[32m+[m[32m            string queryKeyString = null;[m
[32m+[m[32m            if (urlParts.Length > 1)[m
[32m+[m[32m            {[m
[32m+[m[32m                string query = urlParts[1];[m
[32m+[m[32m                string[] queryKeys = HttpUtility.ParseQueryString(query).AllKeys;[m
[32m+[m[32m                queryKeyString = String.Join("_", queryKeys);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            StringBuilder friendlyPath = new StringBuilder();[m
[32m+[m[32m            friendlyPath.AppendFormat("{0}-{1}",[m
[32m+[m[32m                description.HttpMethod.Method,[m
[32m+[m[32m                localPath.Replace("/", "-").Replace("{", String.Empty).Replace("}", String.Empty));[m
[32m+[m[32m            if (queryKeyString != null)[m
[32m+[m[32m            {[m
[32m+[m[32m                friendlyPath.AppendFormat("_{0}", queryKeyString.Replace('.', '-'));[m
[32m+[m[32m            }[m
[32m+[m[32m            return friendlyPath.ToString();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/MongoTest/Areas/HelpPage/App_Start/HelpPageConfig.cs b/MongoTest/Areas/HelpPage/App_Start/HelpPageConfig.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..d9bfd04[m
[1m--- /dev/null[m
[1m+++ b/MongoTest/Areas/HelpPage/App_Start/HelpPageConfig.cs[m
[36m@@ -0,0 +1,113 @@[m
[32m+[m[32m// Uncomment the following to provide samples for PageResult<T>. Must also add the Microsoft.AspNet.WebApi.OData[m
[32m+[m[32m// package to your project.[m
[32m+[m[32m////#define Handle_PageResultOfT[m
[32m+[m
[32m+[m[32musing System;[m
[32m+[m[32musing System.Collections;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Diagnostics;[m
[32m+[m[32musing System.Diagnostics.CodeAnalysis;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing System.Net.Http.Headers;[m
[32m+[m[32musing System.Reflection;[m
[32m+[m[32musing System.Web;[m
[32m+[m[32musing System.Web.Http;[m
